//      O R D    L S


::INIT::
        NAMESPACES=[]
        GENERATE_ON='.'
        INCLUDES = ['#include "components/trading/msg_trd_cli_ls.h"','#include "components/trading/msg_trd_oms_rq.h"', '#include "components/admin/admin.h"']


::INPUTS::
    cli_rq_nw           (rq   :  mtk::trd::msg::oms_RQ_NW_LS)   [{  const mtk::trd::msg::RQ_XX_LS& p(rq);  (void)p; CHECK_REQUEST    }]
    cli_rq_md           (rq   :  mtk::trd::msg::oms_RQ_MD_LS)   [{  const mtk::trd::msg::RQ_XX_LS& p(rq);  (void)p; CHECK_REQUEST    }]
	cli_rq_cc           (rq   :  mtk::trd::msg::oms_RQ_CC_LS)   [{  const mtk::trd::msg::RQ_XX_LS& p(rq);  (void)p; CHECK_REQUEST    }]

	mkt_cf_ex           (ex   :  mtk::trd::msg::CF_EX_LS)   
                        [{      
                                const mtk::trd::msg::CF_XX_LS& p(ex);  (void)p; 
                                const mtk::trd::msg::CF_XX_LS& cf(ex); 
                                CHECK_CONFIRM  
                                CHECK_EXEC  
                        }]





::OUTPUTS::

    //  to order book
    sig_ob_add_order    (order_st : mtk::trd::msg::CF_XX_LS    )
    sig_ob_del_order    (order_st : mtk::trd::msg::CF_XX_LS    )
    sig_ob_modif_order  (order_st : mtk::trd::msg::CF_XX_LS    )
    sig_ob_check_execs  (order_st : mtk::trd::msg::CF_XX_LS    )
    sig_ob_update_prices(order_st : mtk::trd::msg::CF_XX_LS    )

    //  to client
	sig_cli_cf_nw        (cf   :  mtk::trd::msg::CF_NW_LS)
	sig_cli_cf_md        (cf   :  mtk::trd::msg::CF_MD_LS)
	sig_cli_cf_cc        (cf   :  mtk::trd::msg::CF_CC_LS)

	sig_cli_rj_nw        (rj   :  mtk::trd::msg::RJ_NW_LS)
	sig_cli_rj_md        (rj   :  mtk::trd::msg::RJ_MD_LS)
	sig_cli_rj_cc        (rj   :  mtk::trd::msg::RJ_CC_LS)

	
	sig_cli_cf_ex        (ex   :  mtk::trd::msg::CF_EX_LS)






::COMMON_STATUS_INFO::
      last_confirmation  :  mtk::nullable<mtk::trd::msg::CF_XX_LS>      ({ mtk::nullable<mtk::trd::msg::CF_XX_LS>() })
      last_request       :  mtk::nullable<mtk::trd::msg::RQ_XX_LS>      ({ mtk::nullable<mtk::trd::msg::RQ_XX_LS>() })
      sequence           :  int                                         ({ get_sequence() })
      //  pending historic



::STATUS::init

::STATUS::market


::STATUS::canceled

::STATUS::executed









::TRANSITIONS::

init    --   cli_rq_nw  &&   invalid_rq    /   LE                         ,  rj_rqnw                       ''>   canceled
init    --   cli_rq_nw                     /             wcf & add_queue  ,  cf_nw  & check_ex  &  upd_pr  -->   market
init    --   cli_rq_md                     /   LE                         ,  rj_rqmd                       ''>   canceled
init    --   cli_rq_cc                     /   LE                         ,  rj_rqcc                       ''>   canceled
init    --   mkt_cf_ex                     /   LE                                                          ''>   canceled



market  --   cli_rq_nw                     /   LE &   del_queue            , rj_rqnw & cf_cc               ''>   canceled
market  --   cli_rq_md  &&   invalid_rq    /                               , rj_rqmd                       ''>   market
market  --   cli_rq_md                     /          wcf & modif_queue    , cf_md & check_ex  &  upd_pr   -->   market
market  --   cli_rq_cc                     /          del_queue            , cf_cc             &  upd_pr   -->   canceled
market  --   mkt_cf_ex  &&   full_exec     /          wex                  , cf_ex                         -->   executed
market  --   mkt_cf_ex                     /          wex                  , cf_ex                         -->   market

canceled --   cli_rq_nw                    /   LE  ,  rj_rqnw                 ''>   canceled
canceled --   cli_rq_md                    /   LE  ,  rj_rqmd                 ''>   canceled
canceled --   cli_rq_cc                    /   LE  ,  rj_rqcc                 ''>   canceled
canceled --   mkt_cf_ex                    /   LE                             ''>   canceled

executed --   cli_rq_nw                    /   LE  ,  rj_rqnw                 ''>   executed 
executed --   cli_rq_md                    /   LE  ,  rj_rqmd                 ''>   executed 
executed --   cli_rq_cc                    /   LE  ,  rj_rqcc                 ''>   executed 
executed --   mkt_cf_ex                    /   LE                             ''>   executed 






::MACROS::

            LE
                [{
                    mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("ERROR: " << serrors  << "Errors on " << method_name << "  from status: " << GetStatusName() << "  received:  "  << "  " << p  
                                                                                <<  "  last request: " << last_request()
                                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                                mtk::alPriorError));
                }]

            cf_nw
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_cli_cf_nw.emit(mtk::trd::msg::CF_NW_LS(last_confirmation().Get()));
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to send confirm new. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]

            cf_md
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_cli_cf_md.emit(mtk::trd::msg::CF_MD_LS(last_confirmation().Get()));
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to send confirm modification. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]
                
            cf_cc
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_cli_cf_cc.emit(mtk::trd::msg::CF_CC_LS(last_confirmation().Get()));
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to send confirm cancelation. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]

            cf_ex
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_cli_cf_ex.emit(ex);
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to send confirm cancelation. Errors on " 
                                                                << method_name << "  received:  "  << "  " << ex  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]


            rj_rqnw [{  SEND_REJECT(sig_cli_rj_nw, RJ_NW_LS)  }]

            rj_rqmd [{  SEND_REJECT(sig_cli_rj_md, RJ_MD_LS)  }]
                
            rj_rqcc [{  SEND_REJECT(sig_cli_rj_cc, RJ_CC_LS)  }]

                
            add_queue
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_ob_add_order.emit(last_confirmation().Get());
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to add queue. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]
            
            del_queue
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_ob_del_order.emit(last_confirmation().Get());
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to add queue. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]
            modif_queue
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_ob_modif_order.emit(last_confirmation().Get());
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to add queue. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]
            
            check_ex
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_ob_check_execs.emit(mtk::trd::msg::CF_NW_LS(last_confirmation().Get()));
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to check executions. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]

            upd_pr
                [{
                    if (last_confirmation().HasValue())
                        ci->sig_ob_update_prices.emit(last_confirmation().Get());
                    else
                        mtk::AlarmMsg(mtk::Alarm(MTK_HERE, method_name, MTK_SS("Error mising last confirmation trying to check executions. Errors on " 
                                                                << method_name << "  received:  "  << "  " << rq  
                                                                <<  "  last request: " << last_request()
                                                                <<  "  last confirmed: " << last_confirmation()),
                                                                mtk::alPriorError));
                }]


            wcf
                [{
                    if (last_confirmation().HasValue())
                    {
                        mtk::trd::msg::CF_XX_LS lc = last_confirmation().Get();
                        lc.confirmated_info.cli_ref = rq.cli_ref;
                        lc.confirmated_info.market_pos = rq.request_pos;
                        lc.confirmated_info.total_execs.remaining_qty.SetDouble(rq.request_pos.quantity.GetDouble() - lc.confirmated_info.total_execs.quantity.GetDouble());
                        if (lc.confirmated_info.total_execs.remaining_qty.GetIntCode() <= 0)
                            throw mtk::Alarm(MTK_HERE, method_name, MTK_SS("pending quantity lower than executed quantity " 
                                                                    << method_name << "  received:  "  << "  " << rq  
                                                                    <<  "  last request: " << last_request()
                                                                    <<  "  last confirmed: " << last_confirmation()),
                                                                    mtk::alPriorError);
                        ci->set_last_confirmation(mtk::make_nullable(lc));
                    }
                    else
                    {
                        mtk::trd::msg::CF_XX_LS   lc(
                                                  mtk::trd::msg::CF_XX(
                                                              rq.req_info
                                                            , rq.product_code
                                                            , mtk::msg::sub_control_fluct("EMARKET.TRD", mtk::dtNowLocal()))
                                                , mtk::trd::msg::sub_order_ls_confirmated(
                                                          mtk::trd::msg::sub_order_xx_confirmated(
                                                                  rq.order_id
                                                                , mtk::trd::msg::sub_total_executions(
                                                                              0.
                                                                            , mtk::FixedNumber(mtk::fnDouble(0) ,  mtk::fnDec(0),  mtk::fnInc(1))
                                                                            , rq.request_pos.quantity)
                                                                , rq.cli_ref)
                                                        , rq.request_pos));
                        ci->set_last_confirmation(mtk::make_nullable(lc));
                    }
                }]
                
            wex
                [{
                    ci->set_last_confirmation(mtk::make_nullable(static_cast<const mtk::trd::msg::CF_XX_LS&>(ex)));
                }]

        //  GUARD macros ///////////////////////////////////////////////////////////////////
            invalid_rq
                [{
                    nerrors > 0
                }]

            invalid_cf
                [{
                    nerrors > 0
                }]
                
            full_exec
                [{
                    last_confirmation().HasValue() == true
                    &&  last_confirmation().Get().confirmated_info.total_execs.quantity  
                        == last_confirmation().Get().confirmated_info.market_pos.quantity
                    /*last_confirmation().HasValue() == true  && last_confirmation().Get().confirmated_info.total_execs.remaining_qty.GetIntCode() == 0*/
                }]


